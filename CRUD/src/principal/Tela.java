package principal;
import bean.Bicicleta;
import bean.Venda;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import dao.BicicletaDao;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class Tela extends javax.swing.JFrame {

    DefaultTableModel dtm_tabela,dtm_tabelaVendas;//Elemento que me ajuda a gerenciar o JTable, criando um modelo padrão
    ArrayList<Bicicleta> al_listaBicicletas;
    ArrayList<Venda> al_listaVendas;
    
    public Tela() {
        initComponents();
        dtm_tabela = new DefaultTableModel(null, new String[]{"Código","Modelo","Material","Marchas","Aro","Suspensao","Cor"});//Defini as colunas
        try {//Tratando os erros
            atualizarTabela();//Metodo pra atualizar sempre que alguem for adicionado ou atualizado
        } catch (SQLException ex) {
            System.out.print("SQLException: "+ex.toString());
        } catch (ClassNotFoundException ex) {
            System.out.print("ClassNotFoundException: "+ex.toString());
        }
        dtm_tabelaVendas = new DefaultTableModel(null, new String[]{"Código","Codigo Bike","Valor","Data","Desconto"});
        try {
            atualizarTabela();
        } catch (SQLException ex) {
            System.out.print("SQLException: "+ex.toString());
        } catch (ClassNotFoundException ex) {
            System.out.print("ClassNotFoundException: "+ex.toString());
        }
    }
private void atualizarTabela() throws SQLException, ClassNotFoundException//Lançando erros 
    {
        jtb_Dados.setModel(dtm_tabela);//Colando o dtmm na tabela
        dtm_tabela.setNumRows(0);//Limpo a tabela
        al_listaBicicletas = BicicletaDao.buscarTodasBicicletas();//Busco todas as bicicletas no Banco e retorna um AL com todos os elementos
        for (Bicicleta bike : al_listaBicicletas) //Adiciona cada linha a tabela, elemento por elemento
        {
            dtm_tabela.addRow(new Object[]{bike.getCodigo(), bike.getModelo(), bike.getMaterial(), bike.getMarchas(),bike.getAro(),bike.isSuspensao(),bike.getCor()});
	}
    }

private void atualizarTabelaVendas() throws SQLException, ClassNotFoundException
    {
        jtb_DadosVenda.setModel(dtm_tabelaVendas);
        dtm_tabelaVendas.setNumRows(0);
        al_listaVendas = BicicletaDao.buscarTodasVendas();
        for (Venda v : al_listaVendas) 
        {
            dtm_tabelaVendas.addRow(new Object[]{v.getCodigoVenda(), v.getCodigoBVenda(), v.getValor(), v.getData(),v.getDesconto()});
	}
    }

private PdfPTable inserirPDF() throws SQLException, ClassNotFoundException
    {
        PdfPTable pdft_tabela = new PdfPTable(7);//Criei a variavel tipo PdfTable
        pdft_tabela.addCell("Codigo");//Adicionei o que eu queria que fosse o titulo de cada coluna
        pdft_tabela.addCell("Modelo");
        pdft_tabela.addCell("Material");
        pdft_tabela.addCell("N. Marchas");
        pdft_tabela.addCell("Aro");
        pdft_tabela.addCell("Suspensão");
        pdft_tabela.addCell("Cor");
        al_listaBicicletas = BicicletaDao.buscarTodasBicicletas();//Chamei a função para buscar todas as bicicletas 
        for (Bicicleta bike : al_listaBicicletas) //Chamei pra inserir as bicicletas buscadas na tabela
        {
            pdft_tabela.addCell(Integer.toString(bike.getCodigo()));
            pdft_tabela.addCell(bike.getModelo());
            pdft_tabela.addCell(bike.getMaterial());
            pdft_tabela.addCell(Integer.toString(bike.getMarchas()));
            pdft_tabela.addCell(bike.getAro());
            pdft_tabela.addCell(Boolean.toString(bike.isSuspensao()));
            pdft_tabela.addCell(bike.getCor());        
        }
       return(pdft_tabela); 
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtb_Dados = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtb_DadosVenda = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jtf_Material = new javax.swing.JTextField();
        jtf_Marchas = new javax.swing.JTextField();
        jtf_Aro = new javax.swing.JTextField();
        jcb_Suspensao = new javax.swing.JCheckBox();
        jbt_Adicionar = new javax.swing.JButton();
        jtf_Cor = new javax.swing.JTextField();
        jbt_PDF = new javax.swing.JButton();
        jbt_Atualizar = new javax.swing.JButton();
        jlb_Codigo = new javax.swing.JLabel();
        jlb_Modelo = new javax.swing.JLabel();
        jlb_Material = new javax.swing.JLabel();
        jlb_Marchas = new javax.swing.JLabel();
        jlb_Aro = new javax.swing.JLabel();
        jlb_Suspensao = new javax.swing.JLabel();
        jlb_Cor = new javax.swing.JLabel();
        jtf_CodigoB = new javax.swing.JTextField();
        jbt_Excluir = new javax.swing.JButton();
        jtf_Modelo = new javax.swing.JTextField();
        jlb_CodigoVenda = new javax.swing.JLabel();
        jtf_CodigoVenda = new javax.swing.JTextField();
        jlb_Valor = new javax.swing.JLabel();
        jtf_Valor = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jtf_Desconto = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jtb_Dados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtb_Dados);

        jTabbedPane1.addTab("Tabela Bicletas", jScrollPane1);

        jtb_DadosVenda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jtb_DadosVenda);

        jTabbedPane1.addTab("Tabela de Vendas", jScrollPane2);

        jtf_Material.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtf_MaterialActionPerformed(evt);
            }
        });

        jtf_Marchas.setText("2 Digitos");

        jtf_Aro.setText("2 Digitos");

        jcb_Suspensao.setText("Sim");
        jcb_Suspensao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcb_SuspensaoActionPerformed(evt);
            }
        });

        jbt_Adicionar.setText("Adicionar");
        jbt_Adicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbt_AdicionarActionPerformed(evt);
            }
        });

        jbt_PDF.setText("Gerar PDF");
        jbt_PDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbt_PDFActionPerformed(evt);
            }
        });

        jbt_Atualizar.setText("Atualizar");
        jbt_Atualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbt_AtualizarActionPerformed(evt);
            }
        });

        jlb_Codigo.setText("Código:");

        jlb_Modelo.setText("Modelo:");

        jlb_Material.setText("Material do Quadro:");

        jlb_Marchas.setText("Numero de Marchas");

        jlb_Aro.setText("Tamanho do Aro:");

        jlb_Suspensao.setText("Presença de Suspensão");

        jlb_Cor.setText("Cor:");

        jtf_CodigoB.setText("(3 Digitos)");

        jbt_Excluir.setText("Excluir");
        jbt_Excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbt_ExcluirActionPerformed(evt);
            }
        });

        jlb_CodigoVenda.setText("Código da Venda:");

        jtf_CodigoVenda.setText("3 Digitos");

        jlb_Valor.setText("Valor da Bicicleta:");

        jtf_Valor.setText("Maximo de 4 Digitos");

        jLabel2.setText("Desconto:");

        jtf_Desconto.setText("2 Digitos");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlb_Valor)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jbt_PDF, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jbt_Adicionar)
                                .addGap(37, 37, 37)
                                .addComponent(jbt_Atualizar)
                                .addGap(35, 35, 35)
                                .addComponent(jbt_Excluir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jlb_Codigo)
                                    .addComponent(jlb_Material)
                                    .addComponent(jlb_Marchas)
                                    .addComponent(jlb_Aro)
                                    .addComponent(jlb_Suspensao)
                                    .addComponent(jlb_Cor)
                                    .addComponent(jlb_Modelo)
                                    .addComponent(jlb_CodigoVenda)
                                    .addComponent(jLabel2))
                                .addGap(31, 31, 31)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jtf_CodigoVenda)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jtf_CodigoB, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jtf_Material, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jtf_Marchas, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jtf_Aro, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jtf_Modelo, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jcb_Suspensao))
                                    .addComponent(jtf_Cor, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                                    .addComponent(jtf_Valor)
                                    .addComponent(jtf_Desconto))))))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlb_Codigo)
                    .addComponent(jtf_CodigoB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlb_Modelo)
                    .addComponent(jtf_Modelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlb_Material)
                    .addComponent(jtf_Material, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlb_Marchas)
                    .addComponent(jtf_Marchas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlb_Aro)
                    .addComponent(jtf_Aro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlb_Suspensao)
                    .addComponent(jcb_Suspensao))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlb_Cor)
                    .addComponent(jtf_Cor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlb_CodigoVenda)
                    .addComponent(jtf_CodigoVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlb_Valor)
                    .addComponent(jtf_Valor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtf_Desconto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbt_Atualizar)
                    .addComponent(jbt_Excluir)
                    .addComponent(jbt_Adicionar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbt_PDF)
                .addGap(18, 18, 18))
        );

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 686, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbt_ExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbt_ExcluirActionPerformed
        // TODO add your handling code here:
        String s_codigo;
        int i_codigo;
        s_codigo = jtf_CodigoB.getText();
        i_codigo = Integer.parseInt(s_codigo);
        try {
            BicicletaDao.remover(i_codigo);
            atualizarTabela();
        } catch (SQLException ex) {
            System.out.print("SQLException: "+ex.toString());
        } catch (ClassNotFoundException ex) {
            System.out.print("ClassNotFoundException: "+ex.toString());
        }
        limparTela();
    }//GEN-LAST:event_jbt_ExcluirActionPerformed

    private void jbt_AtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbt_AtualizarActionPerformed
        // TODO add your handling code here:
        String s_codigo, s_modelo, s_material, s_marchas, s_aro, s_cor,s_codigoVenda, s_codigoBVenda, s_valor, s_desconto;
        Boolean validacao=false;              
        if(!jtf_CodigoB.getText().equals(""))//Validação do Codigo da Bicicleta, tanto pra nao ficar vazio tanto pra ter tamanho=3 e apenas digitos.
        {
            s_codigo = jtf_CodigoB.getText();
        
            if(s_codigo.length()== 3)
            {
                int caracter = s_codigo.charAt(0);
                if(caracter<48 || caracter >57)
                {
                   caracter = s_codigo.charAt(1);
                    if(caracter<48 || caracter >57)
                    {
                       caracter = s_codigo.charAt(2);
                        if(caracter<48 || caracter >57)
                        {
                           validacao = true; 
                        }
                    }
                }                               
            }
        }
        if(jtf_Modelo.getText().equals(""))
        validacao = false;
        if(jtf_Material.getText().equals(""))
        validacao = false;        
        if(!jtf_Marchas.getText().equals(""))//Validação das Marchas para que não esteja vazio, serem apenas numeros e até tamanho=2
        {
            s_marchas = jtf_Marchas.getText();
        
            if(s_marchas.length()== 2)
            {
                int caracter = s_marchas.charAt(0);
                if(caracter<48 || caracter >57)
                {
                   caracter = s_marchas.charAt(1);
                    if(caracter<48 || caracter >57)
                    {
                       validacao = true;
                    }
                }               
            }
        }
        //Validando o aro para ser um número de 2 digitos apenas
        if(!jtf_Aro.getText().equals(""))
        {
            s_aro = jtf_Aro.getText();
        
            if(s_aro.length()== 2)
            {
                int caracter = s_aro.charAt(0);
                if(caracter<48 || caracter >57)
                {
                   caracter = s_aro.charAt(1);
                    if(caracter<48 || caracter >57)
                    {
                       validacao = true;
                    }
                }               
            }
        }
        if(jcb_Suspensao.getText().equals(""))
        validacao = false;
        if(jtf_Cor.getText().equals(""))
        validacao = false;
        if(!jtf_CodigoVenda.getText().equals(""))//Validando para que esse codigo não esteja vazio, tenha apenas digitos e tamanho = 3
        {
            s_codigoBVenda = jtf_CodigoVenda.getText();
            if(s_codigoBVenda.length()== 3)
            {
                int caracter = s_codigoBVenda.charAt(0);
                if(caracter<48 || caracter >57)
                {
                   caracter = s_codigoBVenda.charAt(1);
                    if(caracter<48 || caracter >57)
                    {
                       caracter = s_codigoBVenda.charAt(2);
                        if(caracter<48 || caracter >57)
                        {
                           validacao = true; 
                        }
                    }
                }                               
            }
        }
        if(!jtf_Valor.getText().equals(""))//Validando o preço das bicicletas não esteja vazio, e ser apenas numeros e tamanho = 4
        {
            s_valor = jtf_Valor.getText();
            if(s_valor.length()== 4)
            {
                int caracter = s_valor.charAt(0);
                if(caracter<48 || caracter >57)
                {
                   caracter = s_valor.charAt(1);
                    if(caracter<48 || caracter >57)
                    {
                       caracter = s_valor.charAt(2);
                        if(caracter<48 || caracter >57)
                        {
                           caracter = s_valor.charAt(3);
                            if(caracter<48 || caracter >57)
                            {
                               validacao = true; 
                            }
                        }
                    }
                }                               
            }
        }
        if(!jtf_Desconto.getText().equals(""))//Validando para que o Desconto não esteja vazio, e ser apenas números e de tamanho=2
        {
            s_desconto = jtf_Desconto.getText();
        
            if(s_desconto.length()== 2)
            {
                int caracter = s_desconto.charAt(0);
                if(caracter<48 || caracter >57)
                {
                   caracter = s_desconto.charAt(1);
                    if(caracter<48 || caracter >57)
                    {
                       validacao = true;
                    }
                }               
            }
        }
//Fim das validações das opções de entrada 
    if(validacao)
    {              
        try {
            Bicicleta bic_bicicleta = new Bicicleta();
            Boolean b_suspensao;
            s_codigo= s_codigoBVenda = jtf_CodigoB.getText();//Pego as informações q estao na tela
            s_modelo = jtf_Modelo.getText();
            s_material = jtf_Material.getText();
            s_marchas = jtf_Marchas.getText();
            s_aro = jtf_Aro.getText();
            b_suspensao = jcb_Suspensao.isSelected();
            s_cor = jtf_Aro.getText();

            bic_bicicleta.setCodigo(Integer.parseInt(s_codigo));//Lanço os valores para as variaveis    
            bic_bicicleta.setModelo(s_modelo);
            bic_bicicleta.setMaterial(s_material);
            bic_bicicleta.setMarchas(Integer.parseInt(s_marchas));
            bic_bicicleta.setAro(s_aro);
            bic_bicicleta.setSuspensao(b_suspensao);
            bic_bicicleta.setCor(s_cor);
            BicicletaDao.atualizar(bic_bicicleta);//Chamo a função para adicionar no banco
            atualizarTabela();
            
            //Parte relacionado a venda
            Venda vend_vendas = new Venda();
            s_codigoVenda = jtf_CodigoVenda.getText();
            s_valor = jtf_Valor.getText();
            s_desconto = jtf_Desconto.getText();
            LocalDate ld_data = LocalDate.now();//guardei a hora da alteração da compra                                
            vend_vendas.setCodigoVenda(Integer.parseInt(s_codigoVenda));
            vend_vendas.setCodigoBVenda(Integer.parseInt(s_codigoBVenda));
            vend_vendas.setValor(s_valor);
            vend_vendas.setData(ld_data);
            vend_vendas.setDesconto(Integer.parseInt(s_desconto));
            BicicletaDao.atualizarVendas(vend_vendas);
            atualizarTabelaVendas();
            
        } catch (SQLException ex) {
            System.out.print("SQLException: "+ex.toString());
        } catch (ClassNotFoundException ex) {
            System.out.print("ClassNotFoundException: "+ex.toString());
        }
        limparTela();
    }else{
            JOptionPane.showMessageDialog(null," Não foi possível atualizar, preencha corretamente todos os campos!");
        }
    }//GEN-LAST:event_jbt_AtualizarActionPerformed

    private void jbt_PDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbt_PDFActionPerformed
        // TODO add your handling code here:
        Document documento = new Document();
        Paragraph par_paragrafo01 = new Paragraph("Tabela de Bicicletas");//Adicionei uma frase ao pdf
               
        PdfPTable pdft_tabela = new PdfPTable(7);
        pdft_tabela = inserirPDF();//Chamei uma função para incrementar a tabela no PDF

        try {//Inseri o paragrafo e a tabela criados no Aquivo
            PdfWriter.getInstance(documento, new FileOutputStream("VendasDeBicicletas.pdf"));
            documento.open();
            documento.add(par_paragrafo01);
            documento.add(new Paragraph(" "));
            documento.add(pdft_tabela);
            System.out.print("\n PDF criado com sucesso.");
            JOptionPane.showMessageDialog(null, "PDF criado com sucesso.");
        } catch (DocumentException | FileNotFoundException ex  ) {
            System.out.print("\n Erro: "+ex.toString());
        }
        documento.close();
    }//GEN-LAST:event_jbt_PDFActionPerformed

    private void jbt_AdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbt_AdicionarActionPerformed
        // TODO add your handling code here:
        String s_codigo, s_modelo, s_material, s_marchas, s_aro, s_cor,s_codigoVenda, s_codigoBVenda, s_valor, s_desconto;
        Boolean validacao=false;
        
        //Validação do Codigo da Bicicleta, tanto pra nao ficar vazio tanto pra ter tamanho=3 e apenas digitos.
        if(!jtf_CodigoB.getText().equals(""))
        {
            s_codigo = jtf_CodigoB.getText();
        
            if(s_codigo.length()== 3)
            {
                int caracter = s_codigo.charAt(0);
                if(caracter<48 || caracter >57)
                {
                   caracter = s_codigo.charAt(1);
                    if(caracter<48 || caracter >57)
                    {
                       caracter = s_codigo.charAt(2);
                        if(caracter<48 || caracter >57)
                        {
                           validacao = true; 
                        }
                    }
                }                               
            }
        }
        if(jtf_Modelo.getText().equals(""))
        validacao = false;
        if(jtf_Material.getText().equals(""))
        validacao = false;
        //Validação das Marchas para serem apenas numeros e até tamanho=2
        if(!jtf_Marchas.getText().equals(""))
        {
            s_marchas = jtf_Marchas.getText();
        
            if(s_marchas.length()== 2)
            {
                int caracter = s_marchas.charAt(0);
                if(caracter<48 || caracter >57)
                {
                   caracter = s_marchas.charAt(1);
                    if(caracter<48 || caracter >57)
                    {
                       validacao = true;
                    }
                }               
            }
        }
        //Validando o aro para ser um número de 2 digitos apenas
        if(!jtf_Aro.getText().equals(""))
        {
            s_aro = jtf_Aro.getText();
        
            if(s_aro.length()== 2)
            {
                int caracter = s_aro.charAt(0);
                if(caracter<48 || caracter >57)
                {
                   caracter = s_aro.charAt(1);
                    if(caracter<48 || caracter >57)
                    {
                       validacao = true;
                    }
                }               
            }
        }
        if(jcb_Suspensao.getText().equals(""))
        validacao = false;
        if(jtf_Cor.getText().equals(""))
        validacao = false;
        if(!jtf_CodigoVenda.getText().equals(""))//Validando para que esse codigo tenha apenas digitos e tamanho = 3
        {
            s_codigoBVenda = jtf_CodigoVenda.getText();
            if(s_codigoBVenda.length()== 3)
            {
                int caracter = s_codigoBVenda.charAt(0);
                if(caracter<48 || caracter >57)
                {
                   caracter = s_codigoBVenda.charAt(1);
                    if(caracter<48 || caracter >57)
                    {
                       caracter = s_codigoBVenda.charAt(2);
                        if(caracter<48 || caracter >57)
                        {
                           validacao = true; 
                        }
                    }
                }                               
            }
        }
        if(!jtf_Valor.getText().equals(""))//Validando o preço das bicicletas para ser apenas numeros e tamanho = 4
        {
            s_valor = jtf_Valor.getText();
            if(s_valor.length()< 4)
            {
                int caracter = s_valor.charAt(0);
                if(caracter<48 || caracter >57)
                {
                   caracter = s_valor.charAt(1);
                    if(caracter<48 || caracter >57)
                    {
                       caracter = s_valor.charAt(2);
                        if(caracter<48 || caracter >57)
                        {
                           caracter = s_valor.charAt(3);
                            if(caracter<48 || caracter >57)
                            {
                               validacao = true; 
                            }
                        }
                    }
                }                               
            }
        }
        if(!jtf_Desconto.getText().equals(""))//Validando para o Desconto ser apenas números e de tamanho=2
        {
            s_desconto = jtf_Desconto.getText();
        
            if(s_desconto.length()== 2)
            {
                int caracter = s_desconto.charAt(0);
                if(caracter<48 || caracter >57)
                {
                   caracter = s_desconto.charAt(1);
                    if(caracter<48 || caracter >57)
                    {
                       validacao = true;
                    }
                }               
            }
        }else{
            
        }
//Fim das validações das opções de entrada        
        if(validacao){
            try
            {
                Bicicleta bic_bicicleta = new Bicicleta();
                Venda vend_vendas = new Venda();
                
                Boolean b_suspensao;
               
                s_codigo= s_codigoBVenda = jtf_CodigoB.getText();
                s_modelo = jtf_Modelo.getText();
                s_material = jtf_Material.getText();
                s_marchas = jtf_Marchas.getText();
                s_aro = jtf_Aro.getText();
                b_suspensao = jcb_Suspensao.isSelected();
                s_cor = jtf_Cor.getText();              
                bic_bicicleta.setCodigo(Integer.parseInt(s_codigo));
                bic_bicicleta.setModelo(s_modelo);
                bic_bicicleta.setMaterial(s_material);
                bic_bicicleta.setMarchas(Integer.parseInt(s_marchas));
                bic_bicicleta.setAro(s_aro);
                bic_bicicleta.setSuspensao(b_suspensao);
                bic_bicicleta.setCor(s_cor);
                BicicletaDao.adicionar(bic_bicicleta);
                atualizarTabela();
                
                //Adicionando a parte da venda
                s_codigoVenda = jtf_CodigoVenda.getText();
                s_valor = jtf_Valor.getText();
                s_desconto = jtf_Desconto.getText();
                LocalDate ld_data = LocalDate.now();//guardei a hora da compra                                
                vend_vendas.setCodigoVenda(Integer.parseInt(s_codigoVenda));
                vend_vendas.setCodigoBVenda(Integer.parseInt(s_codigoBVenda));
                vend_vendas.setValor(s_valor);
                vend_vendas.setData(ld_data);
                vend_vendas.setDesconto(Integer.parseInt(s_desconto));
                BicicletaDao.adicionarVenda(vend_vendas);
                atualizarTabelaVendas();
                
                limparTela();
            } catch (SQLException ex) {
                System.out.print("SQLException: "+ex.toString());
            } catch (ClassNotFoundException ex) {
                System.out.print("ClassNotFoundException: "+ex.toString());
            }
        }else{
            JOptionPane.showMessageDialog(null," Algum campo contém informação inválida! Preencha novamente");
        }
        
        

    }//GEN-LAST:event_jbt_AdicionarActionPerformed

    private void jcb_SuspensaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcb_SuspensaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcb_SuspensaoActionPerformed

    private void jtf_MaterialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtf_MaterialActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_MaterialActionPerformed
private void limparTela()
    {
        jtf_CodigoB.setText("");
        jtf_Modelo.setText("");
        jtf_Material.setText("");
        jtf_Marchas.setText("");
        jtf_Aro.setText("");
        jcb_Suspensao.setSelected(false);
        jtf_Aro.setText("");
        jtf_CodigoVenda.setText("");
        jtf_Valor.setText("");
        jtf_Desconto.setText("");       
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tela().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton jbt_Adicionar;
    private javax.swing.JButton jbt_Atualizar;
    private javax.swing.JButton jbt_Excluir;
    private javax.swing.JButton jbt_PDF;
    private javax.swing.JCheckBox jcb_Suspensao;
    private javax.swing.JLabel jlb_Aro;
    private javax.swing.JLabel jlb_Codigo;
    private javax.swing.JLabel jlb_CodigoVenda;
    private javax.swing.JLabel jlb_Cor;
    private javax.swing.JLabel jlb_Marchas;
    private javax.swing.JLabel jlb_Material;
    private javax.swing.JLabel jlb_Modelo;
    private javax.swing.JLabel jlb_Suspensao;
    private javax.swing.JLabel jlb_Valor;
    private javax.swing.JTable jtb_Dados;
    private javax.swing.JTable jtb_DadosVenda;
    private javax.swing.JTextField jtf_Aro;
    private javax.swing.JTextField jtf_CodigoB;
    private javax.swing.JTextField jtf_CodigoVenda;
    private javax.swing.JTextField jtf_Cor;
    private javax.swing.JTextField jtf_Desconto;
    private javax.swing.JTextField jtf_Marchas;
    private javax.swing.JTextField jtf_Material;
    private javax.swing.JTextField jtf_Modelo;
    private javax.swing.JTextField jtf_Valor;
    // End of variables declaration//GEN-END:variables
}
